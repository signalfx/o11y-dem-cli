default:
  image: 'cimg/node:20.18.0'

cache:
  key:
      files:
          - package-lock.json
  paths:
      - './node_modules'

include:
  - project: 'ci-cd/templates'
    ref: master
    file: '/prodsec/.oss-scan.yml'
  - project: 'ci-cd/templates'
    ref: master
    file: '/prodsec/.sast-scan.yml'

stages:
  - install
  - build
  - lint
  - test
  - verify
  - release

install_dependencies:
  stage: install
  script:
    - npm ci

build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
lint:
  stage: lint
  script:
    - npm run lint

unit_tests:
  stage: test
  script:
    - npm run test:unit

oss-scan:
  stage: verify
  extends: .oss-scan

sast-scanner:
  stage: verify
  extends: .sast_scan
  variables:
    alert_mode: "policy"

release_dry_run:
  stage: release
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
    - echo ${#NPM_TOKEN}
    - npm publish --dry-run
    - rm -f ~/.npmrc
  dependencies:
    - build 
    - lint
    - unit_tests
  when: manual 

pre_release:
  stage: release
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
    - npm publish --tag prerelease
    - rm -f ~/.npmrc
  rules:
    # Only run the pre release step for Git tags (e.g., prerelease-v1.2.3, prerelease-v1.2.3-alpha etc)
    - if: $CI_COMMIT_TAG =~ /^prerelease-v[0-9]+\.[0-9]+\.[0-9]+(?:-.+)?$/
  dependencies:
    - build 
    - lint
    - unit_tests
  when: manual 

release:
  stage: release
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
    - npm publish
    - rm -f ~/.npmrc
  rules:
    # Only run the release step for Git tags (e.g., v1.0.0)
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*/
  dependencies:
    - build 
    - lint
    - unit_tests
  when: manual
